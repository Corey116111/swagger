openapi: 3.0.0
info:
  title: Эклерная кондитерская
  version: 1.0.0
  description: Управления эклерами, начинками и заказами
paths:
  /eclairs:
    get:
      tags:
        - Эклеры
      summary: Получить эклер дня
      description: Специальное предложение дня - уникальный эклер, доступный только сегодня
      responses:
        '200':
          description: Описание эклера дня
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eclair'
    post:
      tags:
        - Эклеры
      summary: Создать новый вид эклера
      description: Добавляет новый вид эклера в меню кондитерской
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EclairInput'
      responses:
        '201':
          description: Подтверждение создания нового эклера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Eclair'
    delete:
      tags:
        - Эклеры
      summary: Удалить эклер из меню
      description: Удаление существующего вида эклера из меню по его идентификатору
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Идентификатор эклера для удаления
      responses:
        '200':
          description: Подтверждение удаления эклера
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Эклер 'Кофейный' удален из меню
  /fillings:
    get:
      tags:
        - Начинки
      summary: Получить список начинок с пагинацией
      description: Возвращает список начинок с поддержкой пагинации
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Номер страницы
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 15
          description: Количество начинок на странице
      responses:
        '200':
          description: Список начинок с информацией о пагинации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationFillings'
    patch:
      tags:
        - Начинки
      summary: Обновить состав начинки
      description: Обновляет состав существующей начинки
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Идентификатор начинки для обновления
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FillingUpdate'
      responses:
        '200':
          description: Подтверждение обновления начинки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filling'
    put:
      tags:
        - Начинки
      summary: Добавить новую начинку
      description: Создает новый вид начинки для эклеров
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FillingInput'
      responses:
        '200':
          description: Подтверждение добавления начинки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filling'
  /orders:
    post:
      tags:
        - Заказы
      summary: Сделать стандартный заказ
      description: Создает новый заказ на стандартную коробку эклеров (12 шт)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInput'
      responses:
        '200':
          description: Подтверждение заказа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    get:
      tags:
        - Заказы
      summary: Получить статус заказа
      description: Возвращает текущий статус указанного заказа
      parameters:
        - in: query
          name: orderId
          required: true
          schema:
            type: string
          description: Идентификатор заказа
      responses:
        '200':
          description: Текущий статус заказа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
    delete:
      tags:
        - Заказы
      summary: Отменить заказ
      description: Отменяет существующий заказ
      parameters:
        - in: query
          name: orderId
          required: true
          schema:
            type: string
          description: Идентификатор заказа для отмены
      responses:
        '200':
          description: Подтверждение отмены заказа
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Ваш заказ #123 успешно отменен'

components:
  schemas:
    Eclair: # получить эклер дня
      type: object
      properties:
        id:
          type: string
          example: "ecl-1"
        name:
          type: string
          example: "Карамельно-ванильный"
        description:
          type: string
          example: "Нежный эклер с карамельно-ванильным кремом и ореховой крошкой"
        price:
          type: number
          format: float
          example: 50.25
        isSpecial:
          type: boolean
          example: true
        fillingId: # начинка
          type: string
          example: "fill-1"
      required:
        - id
        - name
        - price

    EclairInput: # создать новый вид эклера
      type: object
      properties:
        name:
          type: string
          example: "Мятно-шоколадный"
        description:
          type: string
          example: "Эклер с мятным кремом и темным шоколадом"
        price:
          type: number
          format: float
          example: 30.50
        fillingId: # начинка
          type: string
          example: "fill-2"
      required:
        - name
        - price
        - fillingId

    Filling: # получить фирменную начинку
      type: object
      properties:
        id:
          type: string
          example: "fill-4"
        name:
          type: string
          example: "Заварной крем с тайским базиликом"
        description:
          type: string
          example: "Уникальная фирменная начинка с нотками тайского базилика"
        ingredients: # состав
          type: array
          items:
            type: string
          example: ["молоко", "яйца", "сахар", "тайский базилик"]
      required:
        - id
        - name
        - ingredients
        
    PaginationFillings:
      type: object
      properties:
        fillings:
          type: array
          items:
            $ref: '#/components/schemas/Filling'
        total_items:
          type: integer
          example: 45
        total_pages: 
          type: integer
          example: 3
        current_page:
          type: integer
          example: 1
        page_size:
          type: integer
          example: 15
        

    FillingUpdate: # обновить состав начинки
      type: object
      properties:
        ingredients:
          type: array
          items:
            type: string
          example: ["ваниль", "молоко", "яйца", "сахар", "ванильный экстракт"]
        description:
          type: string
          example: "Обновленный ванильный крем с натуральной ванилью"
    
    FillingInput: # добавить новую начинку
      type: object
      properties:
        name:
          type: string
          example: "Клубнично-базиликовая"
        description:
          type: string
          example: "Свежая клубника с зеленым базиликом"
        ingredients:
          type: array
          items:
            type: string
          example: ["клубника", "базилик", "сливки", "сахар"]
      required:
        - name
        - ingredients

    Order: # сделать стандартный заказ от лица пользователя
      type: object
      properties:
        orderId:
          type: string
          example: "ord-1"
        userID:
          type: string
          example: "user-1"
        eclairs:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        totalPrice:
          type: number
          format: float
          example: 365.50
        status:
          type: string
          enum: ["Создан", "В пути", "Доставлен", "Отменен"]
          example: "Создан"
        createdAt:
          type: string
          format: date-time
          example: "26-03-2025 10:15:50"
      required:
        - orderId
        - userId
        - totalPrice
        - status

    OrderItem:
      type: object
      properties:
        eclairId:
          type: string
          example: "ecl-5"
        quantity:
          type: integer
          example: 2
        pricePerUnit:
          type: number
          format: float
          example: 40.99

    OrderInput:
      type: object
      properties:
        userId:
          type: string
          example: "user-1"
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemInput'
          minItems: 1
        customerNotes:
          type: string
          example: "Пожалуйста, добавьте больше крема"
      required:
        - userId
        - items

    OrderItemInput:
      type: object
      properties:
        eclairId:
          type: string
          example: "ecl-5"
        quantity:
          type: integer
          minimum: 1
          example: 2
      required:
        - eclairId
        - quantity

    OrderStatus:
      type: object
      properties:
        orderId:
          type: string
          example: "ord-1"
        status:
          type: string
          example: "Доставлен"
        DeliveryTime:
          type: string
          format: date-time
          example: "26-03-2025 11:03:10"
      required:
        - orderId
        - status